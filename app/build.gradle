plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id("com.google.protobuf") version "0.9.3"
}

android {
    namespace 'com.example.anifun'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.anifun"
        minSdk 29
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental"   : "true"
                ]
            }
        }


    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.3'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    buildFeatures {
        viewBinding true
    }

}




dependencies {
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.4.+'
    testImplementation 'junit:junit:4.12'
    def composeBom = platform('androidx.compose:compose-bom:2023.04.00')
    implementation composeBom
    implementation 'androidx.core:core-ktx'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx'
    implementation 'androidx.activity:activity-compose:1.7.0'
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation 'androidx.compose.material3:material3'
    implementation "androidx.compose.material:material-icons-extended"
    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1"
    implementation "androidx.compose.runtime:runtime-livedata"
    def nav_version = "2.5.3"
    implementation "androidx.navigation:navigation-compose:$nav_version"
    debugImplementation "androidx.compose.ui:ui-tooling"
    debugImplementation "androidx.compose.ui:ui-test-manifest"
    implementation "com.google.accompanist:accompanist-pager:0.31.1-alpha"
    implementation "com.google.accompanist:accompanist-pager-indicators:0.31.1-alpha"
    implementation "io.coil-kt:coil-compose:2.0.0"
    implementation "io.coil-kt:coil-gif:2.1.0"
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "androidx.paging:paging-compose:1.0.0-alpha18"
    // retrofit2依赖
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    // Gson依赖
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.google.code.gson:gson:2.9.0"
    // 日志拦截器
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'
    def paging_version = "3.1.1"

    implementation "androidx.room:room-paging:2.5.0-alpha01"
    implementation "androidx.paging:paging-runtime:$paging_version"
    // paging 3 的compose 版本
    implementation "androidx.paging:paging-compose:1.0.0-alpha18"
    //swiperefresh 的compose 版本
    implementation "com.google.accompanist:accompanist-swiperefresh:0.23.1"
    // paging 3 的compose 版本
    implementation "androidx.paging:paging-compose:1.0.0-alpha18"

    implementation "com.google.accompanist:accompanist-insets:0.17.0"
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.31.1-alpha"

    def room_version = "2.5.0"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    //room 协程
    implementation "androidx.room:room-ktx:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    apply plugin: 'kotlin-kapt'

    // annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.datastore:datastore-preferences:1.0.0"


    // exoPlayer
    implementation 'com.google.android.exoplayer:exoplayer-core:2.18.7'
    implementation 'com.google.android.exoplayer:exoplayer-dash:2.18.7'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.18.7'

    implementation 'androidx.core:core-splashscreen:1.0.0-beta02'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"

    implementation 'androidx.core:core-splashscreen:1.0.0-beta02'

    implementation 'com.github.SherlockGougou:BigImageViewPager:androidx-7.2.5'

    // 另外还需要依赖 glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    // 内部默认使用系统mediaplayer进行解码
    implementation 'xyz.doikki.android.dkplayer:dkplayer-java:3.3.7'

    //包含StandardVideoController的实现
    implementation 'xyz.doikki.android.dkplayer:dkplayer-ui:3.3.7'
    // 使用ijkplayer进行解码
    implementation 'xyz.doikki.android.dkplayer:player-ijk:3.3.7'

    implementation "com.google.protobuf:protobuf-java:3.22.0"
    implementation "io.grpc:grpc-protobuf:1.53.0"
    implementation "io.grpc:grpc-stub:1.53.0"
    implementation 'com.google.protobuf:protobuf-java-util:3.22.0'

    implementation 'com.github.ctiao:DanmakuFlameMaster:0.9.25'

}

protobuf {
    // 配置 protoc
    protoc {
        artifact = "com.google.protobuf:protoc:3.21.9"
    }
    // 配置 grpc
    plugins {
        // 这里需要加 id，旧版本可能是这样: grpc {}
        grpc{
            artifact = "io.grpc:protoc-gen-grpc-java:1.53.0"
        }
    }
    // 配置 gradle task
    generateProtoTasks {
        ofSourceSet("main").forEach {
            it.plugins {
                grpc{ }
            }
        }
    }
}

